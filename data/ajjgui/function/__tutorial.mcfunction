tellraw @s {text:"1. Obtaining GUI Widgets:",color:"yellow"}
tellraw @s [{text:" There are premade demo widgets available with "},{text:"/function ajjgui:__widget/",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__widget/"},hover_event:{action:"show_text",value:"Click Here"}},{text:", made for testing only. Running "},{text:"/function ajjgui:__manual",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__manual"},hover_event:{action:"show_text",value:"Click Here"}},{text:" links to the datapack's documentation, which explains how custom widgets are obtained using /give.\n"}]

tellraw @s {text:"2. Making GUIs:",color:"yellow"}
tellraw @s [{text:" Widgets are put in shulker boxes, each one associated with a page. Running "},{text:"/function ajjgui:__kit",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__kit"},hover_event:{action:"show_text",value:"Click Here"}},{text:" provides a simple kit. The shulker boxes are ordered by index in a chest placed above the GUI target container (e.g., a barrel). Standing above the chest and running "},{text:"/function ajjgui:__compile",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__compile"},hover_event:{action:"show_text",value:"Click Here"}},{text:" removes it and builds a GUI in the bottom container. The shulker boxes of the nearest GUI are retrieved with "},{text:"/function ajjgui:__decompile",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__decompile"},hover_event:{action:"show_text",value:"Click Here"}},{text:", which recreates the chest.\n"}]

tellraw @s {text:"3. Porting GUIs to Players:",color:"yellow"}
tellraw @s [{text:" Compiled GUIs can create copies for specific players. "},{text:"/function ajjgui:__port {player:<player_uuid>,id:<gui_id>}",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__port"},hover_event:{action:"show_text",value:"Click Here"}},{text:" ports the nearest GUI to a player, to be accessed using "},{text:"/function ajjgui:__open {player:<player_uuid>,id:<gui_id>}",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__open"},hover_event:{action:"show_text",value:"Click Here"}},{text:". Both commands receive two macro arguments: a player UUID \"player\", as an Int array, and a GUI ID \"id\", different for each GUI of the same player. The UUID of the executing player is instead used with "},{text:"/function ajjgui:__portself {id:<gui_id>}",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__portself"},hover_event:{action:"show_text",value:"Click Here"}},{text:" and "},{text:"/function ajjgui:__openself {id:<gui_id>}",color:"green",click_event:{action:"suggest_command",command:"/function ajjgui:__openself"},hover_event:{action:"show_text",value:"Click Here"}},{text:", which only require a GUI ID."}]